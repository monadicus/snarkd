syntax = "proto3";

package snarkd;

import "snarkd_common.proto";

enum CommandId {
    INTRODUCTION = 0;
    BLOCK_TRANSMISSION = 1;
    TRANSACTION_TRANSMISSION = 2;
    GET_BLOCKS = 3;
    SYNC_MEMORY_POOL = 4;
    SYNC_PEERS = 5;
    SYNC_BLOCKS = 6;
    PING = 7;
}

enum ResponseCode {
    // set for requests
    NOT_A_RESPONSE = 0;
    // success
    OK = 1;
    // error message in packet_body
    PROTOCOL_ERROR = 2;
    // error message in packet_body
    INTERNAL_ERROR = 3;
}

message BlockHeader {
    uint32 canon_height = 1;
    snarkd_common.Digest hash = 2;
    snarkd_common.Digest previous_hash = 3;
    uint32 nonce = 4;
    uint32 network = 5;
    uint64 coinbase_target = 6;
    uint64 timestamp = 7;
}

message Block {
    BlockHeader header = 1;
    repeated Transaction transactions = 2;
}

message Transaction {
    snarkd_common.Digest transaction_id = 1;
    snarkd_common.Digest ledger_digest = 2;
    snarkd_common.Digest old_serial_number1 = 3;
    snarkd_common.Digest old_serial_number2 = 4;
    snarkd_common.Digest new_commitment1 = 5;
    snarkd_common.Digest new_commitment2 = 6;
    snarkd_common.Digest program_commitment = 7;
    snarkd_common.Digest local_data_root = 8;
    int64 value_balance = 9;
    snarkd_common.Digest signature1 = 10;
    snarkd_common.Digest signature2 = 11;
    bytes new_record1 = 12;
    bytes new_record2 = 13;
    bytes proof = 14;
    snarkd_common.Digest memo = 15;
    snarkd_common.Digest inner_circuit_id = 16;
}

message DigestList {
    repeated snarkd_common.Digest hashes = 1;
}

message PeerList {
    repeated string peers = 1;
}

message Blocks {
    repeated Block blocks = 1;
}

message Transactions {
    repeated Transaction transactions = 1;
}

message Introduction {
    string target_address = 1;
    string version = 2;
    bytes instance_id = 3;
    uint32 inbound_port = 4;
}

message Ping {
    uint64 timestamp = 1;
    uint32 block_height = 2;
}

message Packet {
    CommandId command = 1;
    uint64 id = 2;
    ResponseCode response = 3;
    bool expecting_response = 4;
    oneof packet_body {
        Blocks blocks = 5;
        Transactions transactions = 6;
        DigestList digests = 7;
        Ping ping_pong = 8;
        PeerList peers = 9;
        Introduction introduction = 10;
        string error_message = 11;
    }
}

